name: Run CI for each sub-project

on:
  pull_request:
#     branches:
#     - dev
#     - main
    types:
    - opened
    - synchronize
    - closed
      
permissions:
  contents: write

concurrency:
  group: ci

jobs:
  vars:
    if: github.event.pull_request.draft == false && github.event.action != 'closed' && github.event_name == 'pull_request'
    name: Initialize variables
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          fetch-depth: 2
    - id: sha_short
      run: echo "sha_short=$(git rev-parse --short HEAD)" | tee -a $GITHUB_OUTPUT
    - id: unix_time
      run: echo "unix_time=$(date +%s)" | tee -a $GITHUB_OUTPUT
    - name: Detect which sub-folder(s) changed
      id: detect
      run: >
        changed=$(
        git diff HEAD^ --name-only
        | xargs dirname
        | sed 's/^\..*$//g'
        | cut -d/ -f 1
        | sort -u 
        | jq -R -s -c 'split("\n") | map(select(length > 0))'
        )
        ; echo "changed=$changed" | tee -a $GITHUB_OUTPUT
    outputs:
      sha_short: ${{ steps.sha_short.outputs.sha_short }}
      unix_time: ${{ steps.unix_time.outputs.unix_time }}
      changed: ${{ steps.detect.outputs.changed }} 

  ci:
    name: Run CI
    if: ! needs.vars.outputs.changed == '[]'
    needs:
      - vars
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      max-parallel: 1
      matrix:
        package: ${{ fromJSON(needs.vars.outputs.changed) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run script
        run: |
          set -euo pipefail
          export LC_ALL=C
          source '.github/workflows/ci_${{ matrix.package }}.sh'
  
  tag:
    name: Tag commit
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs:
      - vars
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          fetch-depth: 1
    - name: Add Tag
      run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag build-${{ needs.vars.outputs.sha_short }}
          git push --tags
  
